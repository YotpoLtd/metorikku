version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.6
  github-cli: circleci/github-cli@2.1.0
  slack: circleci/slack@4.1.3

parameters:
  ###############################################################
  # Versioning vars
  ###############################################################
  git_main_branch:
    type: string
    default: "master"
  git_release_prefix:
    type: string
    default: "releases"
  ###############################################################
  # Notification vars
  ###############################################################
  slack_channel:
    type: string
    default: "data-team-cicd"
  ###############################################################
  # Scala vars
  ###############################################################
  sbt_version:
    type: string
    default: "1.6.2"

executors:
  main-docker-executor:
    docker:
      - image: cimg/openjdk:11.0-node

defaults-paramatetr-job: &defaults-paramatetr-job
  executor: main-docker-executor

commands:
  docker-compose-up:
    description: Setup Docker
    steps:
      - run:
          name: Start Docker Compose
          command: |
            LOCAL_DEV=FALSE docker-compose -f .devcontainer/docker-compose.yml up -d --build

            docker ps

            docker exec $(docker ps -aqf "name=devcontainer-main-1") bash -l -c "cp -R /workspace/* /data"
  sbt-setup:
    steps:
      - run:
          name: Sbt setup
          command: |
            curl -fL https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-linux.gz | gzip -d > cs && chmod +x cs && ./cs setup -q
  scala-build:
    steps:
      - run:
          name: Build jar
          command: |
            docker exec $(docker ps -aqf "name=devcontainer-main-1") bash -l -c "cd /data; ./scripts/build.sh"
  scala-test:
    description: Test execution
    steps:
      - run:
          name: Execute tests
          command: |
            docker exec $(docker ps -aqf "name=devcontainer-main-1") bash -l -c "cd /data; ./scripts/test.sh"
  configure-git:
    steps:
      - run:
          name: Configure Git
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "$GITHUB_EMAIL"
            git config user.name "CircleCI"
  aws-profiles:
    steps:
      - run:
          name: Setup AWS profiles
          command: |
            npx @syngenta-digital/acp --file $(pwd)/aws/profiles.yml

            sudo apt update
            sudo apt install -y less

            aws sts get-caller-identity

            cat ~/.aws/config
            printenv
  scala-release:
    steps:
      - run:
          name: Publish release
          command: |
            sbt release
jobs:
  perform-qa:
    machine:
      image: ubuntu-2204:2022.10.1
      docker_layer_caching: true
    resource_class: medium
    steps:
      - checkout
      - docker-compose-up
      - scala-build
      - scala-test
  release:
    <<: *defaults-paramatetr-job
    steps:
      - checkout
      - sbt-setup
      - configure-git
      - scala-release
workflows:
  release:
    jobs:
      - release:
          context:
            - shared-gemfury-tokens
            - shared-github-token
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
  main:
    jobs:
      - perform-qa:
          context:
            - shared-sonarcloud-token
            - shared-gemfury-tokens
